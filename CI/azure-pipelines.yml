trigger:
  batch: true
  branches:
    include:
      - master
      - dev

pr:
  autoCancel: true
  branches:
    include:
      - master
      - dev

jobs:
  - job: xFunc
    pool:
      vmImage: 'windows-latest'

    variables:
      uiSolution: 'xFunc/xFunc.UI.sln'
      solution: 'xFunc.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core 3.1'
      inputs:
        packageType: 'sdk'
        version: '3.1.x'

    - task: UseDotNet@2
      displayName: 'Install .NET 5'
      inputs:
        packageType: 'sdk'
        version: '5.0.x'
        includePreviewVersions: true

    - script: dotnet tool install --global dotnet-reportgenerator-globaltool
    - script: dotnet tool install --global Codecov.Tool

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(solution)'
        arguments: '-c $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '$(solution)'
        arguments: '--nologo --no-build -c $(buildConfiguration) -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput="$(Build.SourcesDirectory)/coverage/" -p:ExcludeByAttribute=ExcludeFromCodeCoverage -p:ExcludeByAttribute=GeneratedCode -p:Include="[xFunc.*]*" -p:Exclude="[xFunc.Tests*]*" -p:Exclude="[xFunc.*]*Exception" -p:Threshold=90 -p:ThresholdStat=total'
        publishTestResults: true

    - task: CmdLine@2
      displayName: 'Generate report'
      inputs:
        script: 'reportgenerator -reports:"$(Build.SourcesDirectory)/coverage/coverage.cobertura.xml" -targetdir:"$(Build.SourcesDirectory)/coverage/" -reporttypes:HtmlInline_AzurePipelines'
        workingDirectory: 'xFunc.Tests'
        failOnStderr: true

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/coverage/coverage.cobertura.xml'
        pathToSources: '$(Build.SourcesDirectory)/coverage/'
        failIfCoverageEmpty: true

    - task: CmdLine@2
      displayName: 'Publish to Codecov'
      inputs:
        script: codecov -f "$(Build.SourcesDirectory)/coverage/coverage.cobertura.xml" -t $(CODECOV_TOKEN)'
        failOnStderr: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(uiSolution)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(uiSolution)'
        arguments: '-c $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '$(solution)'
        outputDir: 'nupkgs'
        nobuild: true
        includesymbols: true

    - task: PublishPipelineArtifact@1
      inputs:
        path: xFunc.Maths/bin/Release/netstandard2.1
        artifact: xFunc.Maths

    - task: PublishPipelineArtifact@1
      inputs:
        path: xFunc.UnitConverters/bin/Release/netstandard2.1
        artifact: xFunc.UnitConverters

    - task: PublishPipelineArtifact@1
      inputs:
        path: nupkgs
        artifact: NuGet Packages

    - task: PublishPipelineArtifact@1
      inputs:
        path: xFunc/bin/Release/netcoreapp3.1
        artifact: xFunc.UI